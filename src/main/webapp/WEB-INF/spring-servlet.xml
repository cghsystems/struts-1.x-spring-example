<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <description>
        The context used to manage org.springframework.web.servlet.DispatcherServlet. This is where all Spring MVC
        declarations should live. Note. Any beans that live here can access beans declared in applicationContext.xml
        This is because all DispatcherServlet implementations inherit context declared in a ContextLoaderListener
    </description>

    <mvc:annotation-driven/>
    <context:component-scan base-package="com.intetech.example.spring.struts"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <property name="basename" value="views"/>
    </bean>

    <!-- Can use this viewResolver over the ResourceBundleViewResolver and remove the need for a views.properties file.
     However this ties you to one view technology. ResourceBundleViewResolver gives the flexibility of view technology
     being allowing different view classes to be defined for each view.
    <bean id="resourceViewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass">
            <value>
                org.springframework.web.servlet.view.tiles2.TilesView
            </value>
        </property>
    </bean>
    -->


    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions" value="/tiles/resources/tiles-def.xml"/>
    </bean>


</beans>